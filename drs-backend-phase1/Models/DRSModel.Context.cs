//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace drs_backend_phase1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    using System.Data;
    
    public partial class DRSEntities : DbContext
    {
        public DRSEntities()
            : base("name=DRSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agency> Agencies { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Base> Bases { get; set; }
        public virtual DbSet<CCG> CCGs { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<EventLog> EventLogs { get; set; }
        public virtual DbSet<EventLogConfig> EventLogConfigs { get; set; }
        public virtual DbSet<EventLogType> EventLogTypes { get; set; }
        public virtual DbSet<IndemnityProvider> IndemnityProviders { get; set; }
        public virtual DbSet<JobType> JobTypes { get; set; }
        public virtual DbSet<PaymentCategory> PaymentCategories { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<ProfileDocument> ProfileDocuments { get; set; }
        public virtual DbSet<ProfileFinance> ProfileFinances { get; set; }
        public virtual DbSet<ProfilePaymentCategory> ProfilePaymentCategories { get; set; }
        public virtual DbSet<ProfileProfessional> ProfileProfessionals { get; set; }
        public virtual DbSet<ProfileShiftType> ProfileShiftTypes { get; set; }
        public virtual DbSet<QueuedEmail> QueuedEmails { get; set; }
        public virtual DbSet<RegisteredSurgery> RegisteredSurgeries { get; set; }
        public virtual DbSet<RegistrarLevel> RegistrarLevels { get; set; }
        public virtual DbSet<SecurityGroup> SecurityGroups { get; set; }
        public virtual DbSet<SecurityRight> SecurityRights { get; set; }
        public virtual DbSet<SecurityRole> SecurityRoles { get; set; }
        public virtual DbSet<ShiftType> ShiftTypes { get; set; }
        public virtual DbSet<SpecialNote> SpecialNotes { get; set; }
        public virtual DbSet<SubType> SubTypes { get; set; }
        public virtual DbSet<Team> Teams { get; set; }

        /// <summary>
        /// Saves all changes made in this context to the underlying database.
        /// </summary>
        /// <returns>
        /// The number of state entries written to the underlying database. This can include
        /// state entries for entities and/or relationships. Relationship state entries are created for
        /// many-to-many relationships and relationships where there is no foreign key property
        /// included in the entity class (often referred to as independent associations).
        /// </returns>
        public override int SaveChanges()
        {
            DateTime saveTime = DateTime.Now;
            foreach (var entry in this.ChangeTracker.Entries())
            {
                if (entry.State == EntityState.Added || entry.State == EntityState.Modified)
                {
                    if (entry.Property("dateModified").CurrentValue == null)
                        entry.Property("dateModified").CurrentValue = saveTime;


                    if (entry.Property("dateCreated").CurrentValue == null)
                        entry.Property("dateCreated").CurrentValue = saveTime;
                }
            }
            return base.SaveChanges();

        }
    }
}
